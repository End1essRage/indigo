-- –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
local chat_id = ctx.chat_id
local test_results = {}

log("Starting storage tests...")

-- –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
local function test_create()
    local test_data = {
        name = "Test User",
        score = 100,
        tags = {"test", "demo"},
        created_at = os.time()
    }
    
    local ok, id = storage_create("test_collection", test_data)
    if ok then
        log("created")

        table.insert(test_results, "‚úÖ CREATE: –î–æ–∫—É–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —Å ID: " .. id)
        return id
    else
        log("not created")

        table.insert(test_results, "‚ùå CREATE: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è")
        return nil
    end
end

-- –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ ID
local function test_get_by_id(id)
    local data, err = storage_get_by_id("test_collection", id)
    log(data)
    log(err)
    if err then
        log(test_results, "‚ùå GET BY ID: –û—à–∏–±–∫–∞: " .. err)
        table.insert(test_results, "‚ùå GET BY ID: –û—à–∏–±–∫–∞: " .. err)
    elseif data then
        log(test_results, "‚úÖ GET BY ID: –ù–∞–π–¥–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: " .. data.name)
        table.insert(test_results, "‚úÖ GET BY ID: –ù–∞–π–¥–µ–Ω –¥–æ–∫—É–º–µ–Ω—Ç: " .. data.name)
    else
        log(test_results, "‚ùå GET BY ID: –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        table.insert(test_results, "‚ùå GET BY ID: –î–æ–∫—É–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
    end
end

-- –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Å —É—Å–ª–æ–≤–∏—è–º–∏
local function test_query()
    -- –ü—Ä–æ—Å—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ
    local simple_query = query_condition("score", ">", 50)
    local results = storage_get("test_collection", 10, simple_query)
    table.insert(test_results, "‚úÖ SIMPLE QUERY: –ù–∞–π–¥–µ–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: " .. #results)
    
    -- –°–ª–æ–∂–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ —Å AND
    local complex_query = query_and(
        query_condition("score", ">=", 100),
        query_condition("name", "=", "Test User")
    )
    results = storage_get("test_collection", 10, complex_query)
    table.insert(test_results, "‚úÖ COMPLEX AND QUERY: –ù–∞–π–¥–µ–Ω–æ: " .. #results)
    
    -- –£—Å–ª–æ–≤–∏–µ —Å OR
    local or_query = query_or(
        query_condition("score", "<", 50),
        query_condition("score", ">", 150)
    )
    results = storage_get("test_collection", 10, or_query)
    table.insert(test_results, "‚úÖ OR QUERY: –ù–∞–π–¥–µ–Ω–æ: " .. #results)
end

-- –¢–µ—Å—Ç 4: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
local function test_update(id)
    local update_data = {
        score = 150,
        updated_at = os.time()
    }
    
    storage_update_by_id("test_collection", id, update_data)
    
    local updated = storage_get_by_id("test_collection", id)
    if updated and updated.score == 150 then
        table.insert(test_results, "‚úÖ UPDATE: –î–æ–∫—É–º–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω")
    else
        table.insert(test_results, "‚ùå UPDATE: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
    end
end

-- –¢–µ—Å—Ç 5: –ú–∞—Å—Å–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
local function test_bulk_update()
    local query = query_condition("score", "<", 200)
    local update_data = {
        category = "updated",
        bulk_updated = true
    }
    
    storage_update("test_collection", query, update_data)
    table.insert(test_results, "‚úÖ BULK UPDATE: –í—ã–ø–æ–ª–Ω–µ–Ω–æ")
end

-- –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ ID
local function test_get_ids()
    local query = query_condition("score", ">", 0)
    local ids = storage_get_ids("test_collection", 5, query)
    table.insert(test_results, "‚úÖ GET IDS: –ü–æ–ª—É—á–µ–Ω–æ ID: " .. #ids)
end

-- –¢–µ—Å—Ç 7: –£–¥–∞–ª–µ–Ω–∏–µ
local function test_delete(id)
    local ok, err = storage_delete_by_id("test_collection", id)
    if not ok then
        log("error while deleting" .. err)
    end

    local deleted, err = storage_get_by_id("test_collection", id)
    if err then 
        table.insert(test_results, "‚ùå DELETE: –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è" .. err)
    else
        if not deleted then
            table.insert(test_results, "‚úÖ DELETE: –î–æ–∫—É–º–µ–Ω—Ç —É–¥–∞–ª–µ–Ω")
        else
            table.insert(test_results, "‚ùå DELETE: –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ —É–¥–∞–ª–∏–ª–æ—Å—å")
        end
    end
end

-- –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç—ã
local test_id = test_create()
if test_id then
    test_get_by_id(test_id)
    test_query()
    test_update(test_id)
    test_bulk_update()
    test_get_ids()
    test_delete(test_id)
end

-- –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
local message = "üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ Storage:*\n\n" .. table.concat(test_results, "\n")
send_message(chat_id, message)